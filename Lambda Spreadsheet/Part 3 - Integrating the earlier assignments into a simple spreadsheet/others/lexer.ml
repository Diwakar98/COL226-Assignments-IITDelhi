# 1 "lexer.mll"
 
        open Parser        (* The type token is defined in parser.mli *)
        open Backend
        exception Eof

# 8 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\223\255\224\255\000\000\001\000\000\000\001\000\000\000\
    \001\000\000\000\246\255\247\255\248\255\249\255\250\255\251\255\
    \252\255\253\255\000\000\046\000\056\000\001\000\066\000\076\000\
    \086\000\096\000\106\000\116\000\245\255\000\000\002\000\243\255\
    \236\255\012\000\237\255\000\000\242\255\003\000\000\000\000\000\
    \006\000\241\255\239\255\238\255\088\000\240\255\099\000\111\000\
    \099\000\095\000\235\255\116\000\094\000\097\000\104\000\100\000\
    \108\000\103\000\233\255\113\000\231\255\001\000\229\255\103\000\
    \114\000\227\255\225\255\106\000\130\000\131\000\112\000\114\000\
    \121\000\116\000\124\000\119\000\234\255\128\000\232\255\004\000\
    \230\255\118\000\130\000\228\255\226\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\031\000\031\000\031\000\031\000\031\000\
    \031\000\011\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\001\000\001\000\031\000\255\255\255\255\000\000\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\002\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\000\000\
    \000\000\255\255\000\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\000\000\255\255\000\000\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\000\000\255\255\
    \000\000\255\255\255\255\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\017\000\010\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \016\000\015\000\000\000\020\000\012\000\020\000\027\000\022\000\
    \018\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\009\000\011\000\000\000\028\000\000\000\000\000\
    \000\000\008\000\038\000\004\000\005\000\030\000\031\000\032\000\
    \062\000\044\000\037\000\080\000\040\000\006\000\035\000\067\000\
    \046\000\043\000\003\000\007\000\036\000\033\000\039\000\029\000\
    \042\000\034\000\041\000\014\000\024\000\013\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \021\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\022\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\022\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \026\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\026\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\045\000\047\000\
    \052\000\049\000\054\000\050\000\061\000\063\000\059\000\055\000\
    \048\000\056\000\057\000\058\000\051\000\064\000\060\000\066\000\
    \065\000\068\000\053\000\070\000\081\000\072\000\079\000\077\000\
    \073\000\074\000\075\000\076\000\082\000\078\000\084\000\069\000\
    \083\000\000\000\000\000\000\000\000\000\071\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\000\000\000\000\000\000\018\000\021\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\009\000\255\255\255\255\
    \255\255\000\000\006\000\000\000\000\000\008\000\030\000\029\000\
    \061\000\005\000\006\000\079\000\039\000\000\000\033\000\003\000\
    \004\000\037\000\000\000\000\000\035\000\007\000\006\000\008\000\
    \038\000\033\000\040\000\000\000\019\000\000\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\044\000\046\000\
    \047\000\048\000\047\000\049\000\052\000\051\000\053\000\054\000\
    \046\000\055\000\056\000\057\000\047\000\051\000\059\000\063\000\
    \064\000\067\000\047\000\068\000\069\000\068\000\070\000\071\000\
    \072\000\073\000\074\000\075\000\069\000\077\000\081\000\068\000\
    \082\000\255\255\255\255\255\255\255\255\068\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 14 "lexer.mll"
                     i
# 168 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 14 "lexer.mll"
                         (FLOAT (float_of_string i))
# 172 "lexer.ml"

  | 1 ->
let
# 15 "lexer.mll"
                   i
# 178 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 15 "lexer.mll"
                         (INT (int_of_string i))
# 182 "lexer.ml"

  | 2 ->
# 16 "lexer.mll"
                         (token lexbuf)
# 187 "lexer.ml"

  | 3 ->
# 17 "lexer.mll"
                         (OPARAN)
# 192 "lexer.ml"

  | 4 ->
# 18 "lexer.mll"
                         (CPARAN)
# 197 "lexer.ml"

  | 5 ->
# 19 "lexer.mll"
                         (OBRAC)
# 202 "lexer.ml"

  | 6 ->
# 20 "lexer.mll"
                         (CBRAC)
# 207 "lexer.ml"

  | 7 ->
# 21 "lexer.mll"
                         (COMMA)
# 212 "lexer.ml"

  | 8 ->
# 22 "lexer.mll"
                         (SEMICOLON)
# 217 "lexer.ml"

  | 9 ->
# 23 "lexer.mll"
                         (NEWLINE)
# 222 "lexer.ml"

  | 10 ->
# 24 "lexer.mll"
                         (ASSIGN)
# 227 "lexer.ml"

  | 11 ->
# 25 "lexer.mll"
                         (COLON)
# 232 "lexer.ml"

  | 12 ->
# 26 "lexer.mll"
                         (ADD)
# 237 "lexer.ml"

  | 13 ->
# 27 "lexer.mll"
                         (SUBT)
# 242 "lexer.ml"

  | 14 ->
# 28 "lexer.mll"
                         (MULT)
# 247 "lexer.ml"

  | 15 ->
# 29 "lexer.mll"
                         (DIV)
# 252 "lexer.ml"

  | 16 ->
# 30 "lexer.mll"
                         (MAX)
# 257 "lexer.ml"

  | 17 ->
# 31 "lexer.mll"
                         (MIN)
# 262 "lexer.ml"

  | 18 ->
# 32 "lexer.mll"
                         (SUM)
# 267 "lexer.ml"

  | 19 ->
# 33 "lexer.mll"
                         (AVG)
# 272 "lexer.ml"

  | 20 ->
# 34 "lexer.mll"
                         (COUNT)
# 277 "lexer.ml"

  | 21 ->
# 35 "lexer.mll"
                         (ROWCOUNT)
# 282 "lexer.ml"

  | 22 ->
# 36 "lexer.mll"
                         (COLCOUNT)
# 287 "lexer.ml"

  | 23 ->
# 37 "lexer.mll"
                         (ROWSUM)
# 292 "lexer.ml"

  | 24 ->
# 38 "lexer.mll"
                         (COLSUM)
# 297 "lexer.ml"

  | 25 ->
# 39 "lexer.mll"
                         (ROWAVG)
# 302 "lexer.ml"

  | 26 ->
# 40 "lexer.mll"
                         (COLAVG)
# 307 "lexer.ml"

  | 27 ->
# 41 "lexer.mll"
                         (ROWMIN)
# 312 "lexer.ml"

  | 28 ->
# 42 "lexer.mll"
                         (COLMIN)
# 317 "lexer.ml"

  | 29 ->
# 43 "lexer.mll"
                         (ROWMAX)
# 322 "lexer.ml"

  | 30 ->
# 44 "lexer.mll"
                         (COLMAX)
# 327 "lexer.ml"

  | 31 ->
# 45 "lexer.mll"
               (EXCEPTION)
# 332 "lexer.ml"

  | 32 ->
# 46 "lexer.mll"
                (raise Eof)
# 337 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;


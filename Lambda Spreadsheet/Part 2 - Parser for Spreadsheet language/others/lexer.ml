# 1 "lexer.mll"
 
        open Parser        (* The type token is defined in parser.mli *)
        exception Eof

# 7 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\224\255\225\255\000\000\001\000\000\000\001\000\000\000\
    \001\000\000\000\247\255\248\255\249\255\250\255\251\255\252\255\
    \253\255\254\255\000\000\046\000\056\000\001\000\068\000\078\000\
    \088\000\098\000\108\000\118\000\128\000\246\255\000\000\002\000\
    \244\255\237\255\012\000\238\255\000\000\243\255\003\000\000\000\
    \000\000\006\000\242\255\240\255\239\255\029\000\241\255\110\000\
    \122\000\110\000\106\000\236\255\127\000\105\000\108\000\115\000\
    \111\000\119\000\114\000\234\255\124\000\232\255\001\000\230\255\
    \114\000\125\000\228\255\226\255\117\000\141\000\142\000\123\000\
    \125\000\132\000\127\000\135\000\130\000\235\255\139\000\233\255\
    \004\000\231\255\129\000\141\000\229\255\227\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\030\000\030\000\030\000\030\000\030\000\
    \030\000\010\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\030\000\030\000\030\000\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\002\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \000\000\000\000\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\000\000\000\000\255\255\000\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\000\000\
    \255\255\255\255\000\000\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\000\000\
    \255\255\000\000\255\255\255\255\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\017\000\010\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \016\000\015\000\000\000\020\000\012\000\020\000\028\000\026\000\
    \018\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\009\000\011\000\000\000\029\000\000\000\000\000\
    \000\000\008\000\039\000\004\000\005\000\031\000\032\000\033\000\
    \063\000\045\000\038\000\081\000\041\000\006\000\036\000\068\000\
    \047\000\044\000\003\000\007\000\037\000\034\000\040\000\030\000\
    \043\000\035\000\042\000\014\000\023\000\013\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \021\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\023\000\046\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \025\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\025\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\026\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\026\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\048\000\053\000\050\000\055\000\051\000\062\000\
    \064\000\060\000\056\000\049\000\057\000\058\000\059\000\052\000\
    \065\000\061\000\067\000\066\000\069\000\054\000\071\000\082\000\
    \073\000\080\000\078\000\074\000\075\000\076\000\077\000\083\000\
    \079\000\085\000\070\000\084\000\000\000\000\000\000\000\000\000\
    \072\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\000\000\000\000\000\000\018\000\021\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\009\000\255\255\255\255\
    \255\255\000\000\006\000\000\000\000\000\008\000\031\000\030\000\
    \062\000\005\000\006\000\080\000\040\000\000\000\034\000\003\000\
    \004\000\038\000\000\000\000\000\036\000\007\000\006\000\008\000\
    \039\000\034\000\041\000\000\000\019\000\000\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\022\000\045\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\047\000\048\000\049\000\048\000\050\000\053\000\
    \052\000\054\000\055\000\047\000\056\000\057\000\058\000\048\000\
    \052\000\060\000\064\000\065\000\068\000\048\000\069\000\070\000\
    \069\000\071\000\072\000\073\000\074\000\075\000\076\000\070\000\
    \078\000\082\000\069\000\083\000\255\255\255\255\255\255\255\255\
    \069\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 11 "lexer.mll"
                     i
# 169 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 11 "lexer.mll"
                         (FLOAT (float_of_string i))
# 173 "lexer.ml"

  | 1 ->
# 12 "lexer.mll"
                         (token lexbuf)
# 178 "lexer.ml"

  | 2 ->
# 13 "lexer.mll"
                         (OPARAN)
# 183 "lexer.ml"

  | 3 ->
# 14 "lexer.mll"
                         (CPARAN)
# 188 "lexer.ml"

  | 4 ->
# 15 "lexer.mll"
                         (OBRAC)
# 193 "lexer.ml"

  | 5 ->
# 16 "lexer.mll"
                         (CBRAC)
# 198 "lexer.ml"

  | 6 ->
# 17 "lexer.mll"
                         (COMMA)
# 203 "lexer.ml"

  | 7 ->
# 18 "lexer.mll"
                         (SEMICOLON)
# 208 "lexer.ml"

  | 8 ->
# 19 "lexer.mll"
                         (NEWLINE)
# 213 "lexer.ml"

  | 9 ->
# 20 "lexer.mll"
                         (ASSIGN)
# 218 "lexer.ml"

  | 10 ->
# 21 "lexer.mll"
                         (COLON)
# 223 "lexer.ml"

  | 11 ->
# 22 "lexer.mll"
                         (ADD)
# 228 "lexer.ml"

  | 12 ->
# 23 "lexer.mll"
                         (SUBT)
# 233 "lexer.ml"

  | 13 ->
# 24 "lexer.mll"
                         (MULT)
# 238 "lexer.ml"

  | 14 ->
# 25 "lexer.mll"
                         (DIV)
# 243 "lexer.ml"

  | 15 ->
# 26 "lexer.mll"
                         (MAX)
# 248 "lexer.ml"

  | 16 ->
# 27 "lexer.mll"
                         (MIN)
# 253 "lexer.ml"

  | 17 ->
# 28 "lexer.mll"
                         (SUM)
# 258 "lexer.ml"

  | 18 ->
# 29 "lexer.mll"
                         (AVG)
# 263 "lexer.ml"

  | 19 ->
# 30 "lexer.mll"
                         (COUNT)
# 268 "lexer.ml"

  | 20 ->
# 31 "lexer.mll"
                         (ROWCOUNT)
# 273 "lexer.ml"

  | 21 ->
# 32 "lexer.mll"
                         (COLCOUNT)
# 278 "lexer.ml"

  | 22 ->
# 33 "lexer.mll"
                         (ROWSUM)
# 283 "lexer.ml"

  | 23 ->
# 34 "lexer.mll"
                         (COLSUM)
# 288 "lexer.ml"

  | 24 ->
# 35 "lexer.mll"
                         (ROWAVG)
# 293 "lexer.ml"

  | 25 ->
# 36 "lexer.mll"
                         (COLAVG)
# 298 "lexer.ml"

  | 26 ->
# 37 "lexer.mll"
                         (ROWMIN)
# 303 "lexer.ml"

  | 27 ->
# 38 "lexer.mll"
                         (COLMIN)
# 308 "lexer.ml"

  | 28 ->
# 39 "lexer.mll"
                         (ROWMAX)
# 313 "lexer.ml"

  | 29 ->
# 40 "lexer.mll"
                         (COLMAX)
# 318 "lexer.ml"

  | 30 ->
# 41 "lexer.mll"
               (EXCEPTION)
# 323 "lexer.ml"

  | 31 ->
# 42 "lexer.mll"
                (raise Eof)
# 328 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

